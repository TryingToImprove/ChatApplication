/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import couseassignment.chat.ChatClient;
import couseassignment.chat.ChatResponse;
import java.awt.CardLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author priva_000
 */
public class Application extends javax.swing.JFrame implements Observer {

    private final ChatClient client;

    /**
     * Creates new form Application
     */
    public Application(ChatClient client) {
        initComponents();
        this.client = client;

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    client.close();
                } catch (IOException ex) {
                    Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
                }

                super.windowClosing(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewSwitcher = new javax.swing.JPanel();
        authenticateWindow = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        btnAuthenticate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        chatWindow = new javax.swing.JPanel();
        sidebarPanel = new javax.swing.JPanel();
        userListScrollPane = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        chatPanel = new javax.swing.JPanel();
        chatMessagesScrollPane = new javax.swing.JScrollPane();
        chatMessagesPanel = new javax.swing.JPanel();
        chatMessagesItemsPanel = new javax.swing.JPanel();
        chatFormPanel = new javax.swing.JPanel();
        messageScrollPane = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        buttonContainerPanel = new javax.swing.JPanel();
        btnSendMessage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(251, 251, 251));

        viewSwitcher.setLayout(new java.awt.CardLayout());

        btnAuthenticate.setText("Connect");
        btnAuthenticate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthenticateActionPerformed(evt);
            }
        });

        jLabel1.setText("Write your username");

        javax.swing.GroupLayout authenticateWindowLayout = new javax.swing.GroupLayout(authenticateWindow);
        authenticateWindow.setLayout(authenticateWindowLayout);
        authenticateWindowLayout.setHorizontalGroup(
            authenticateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authenticateWindowLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addGroup(authenticateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(authenticateWindowLayout.createSequentialGroup()
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAuthenticate)))
                .addContainerGap(477, Short.MAX_VALUE))
        );
        authenticateWindowLayout.setVerticalGroup(
            authenticateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authenticateWindowLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(authenticateWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAuthenticate)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(333, Short.MAX_VALUE))
        );

        viewSwitcher.add(authenticateWindow, "authenticate");

        chatWindow.setLayout(new javax.swing.BoxLayout(chatWindow, javax.swing.BoxLayout.LINE_AXIS));

        sidebarPanel.setMaximumSize(new java.awt.Dimension(250, 2147483647));
        sidebarPanel.setMinimumSize(new java.awt.Dimension(250, 27));
        sidebarPanel.setPreferredSize(new java.awt.Dimension(250, 558));
        sidebarPanel.setLayout(new java.awt.BorderLayout());

        userList.setName(""); // NOI18N
        userListScrollPane.setViewportView(userList);

        sidebarPanel.add(userListScrollPane, java.awt.BorderLayout.CENTER);

        chatWindow.add(sidebarPanel);

        chatPanel.setMinimumSize(new java.awt.Dimension(400, 27));
        chatPanel.setLayout(new javax.swing.BoxLayout(chatPanel, javax.swing.BoxLayout.PAGE_AXIS));

        chatMessagesScrollPane.setBorder(null);

        chatMessagesPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        chatMessagesItemsPanel.setLayout(new javax.swing.BoxLayout(chatMessagesItemsPanel, javax.swing.BoxLayout.PAGE_AXIS));
        chatMessagesPanel.add(chatMessagesItemsPanel);

        chatMessagesScrollPane.setViewportView(chatMessagesPanel);

        chatPanel.add(chatMessagesScrollPane);

        chatFormPanel.setMaximumSize(new java.awt.Dimension(32846, 150));
        chatFormPanel.setLayout(new javax.swing.BoxLayout(chatFormPanel, javax.swing.BoxLayout.LINE_AXIS));

        txtMessage.setColumns(20);
        txtMessage.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        txtMessage.setRows(5);
        messageScrollPane.setViewportView(txtMessage);

        chatFormPanel.add(messageScrollPane);

        buttonContainerPanel.setMaximumSize(new java.awt.Dimension(240, 150));
        buttonContainerPanel.setMinimumSize(new java.awt.Dimension(240, 0));
        buttonContainerPanel.setName(""); // NOI18N
        buttonContainerPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        buttonContainerPanel.setLayout(new java.awt.BorderLayout());

        btnSendMessage.setText("Send");
        btnSendMessage.setMaximumSize(new java.awt.Dimension(40, 25));
        btnSendMessage.setMinimumSize(new java.awt.Dimension(40, 25));
        btnSendMessage.setPreferredSize(new java.awt.Dimension(40, 25));
        btnSendMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMessageActionPerformed(evt);
            }
        });
        buttonContainerPanel.add(btnSendMessage, java.awt.BorderLayout.CENTER);

        chatFormPanel.add(buttonContainerPanel);

        chatPanel.add(chatFormPanel);

        chatWindow.add(chatPanel);

        viewSwitcher.add(chatWindow, "chat");

        getContentPane().add(viewSwitcher, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAuthenticateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthenticateActionPerformed
        String username = txtUsername.getText();
        if (username.equals("")) {
            return;
        }

        this.client.send("USER#" + username);

        CardLayout cardLayout = (CardLayout) viewSwitcher.getLayout();
        cardLayout.show(viewSwitcher, "chat");
    }//GEN-LAST:event_btnAuthenticateActionPerformed

    private void btnSendMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMessageActionPerformed
        String message = txtMessage.getText();

        List<String> receivers = new ArrayList<>();

        boolean isUser = false;
        List<String> username = new ArrayList<>();
        int i = 0;
        while (i < message.length()) {
            char c = message.charAt(i);

            if (isUser && c != ' ') {
                username.add(Character.toString(c));
            }

            switch (c) {
                case '@':
                    isUser = true;
                    break;
                case ' ':
                    if (!username.isEmpty()) {
                        receivers.add(String.join("", username));
                    }
                    username.clear();
                    isUser = false;
                    break;
            }
            i++;
        }

        String receiver = receivers.isEmpty() ? "*" : String.join(",", receivers);

        this.client.send("MSG#" + receiver + "#" + txtMessage.getText());

        txtMessage.setText("");
    }//GEN-LAST:event_btnSendMessageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel authenticateWindow;
    private javax.swing.JButton btnAuthenticate;
    private javax.swing.JButton btnSendMessage;
    private javax.swing.JPanel buttonContainerPanel;
    private javax.swing.JPanel chatFormPanel;
    private javax.swing.JPanel chatMessagesItemsPanel;
    private javax.swing.JPanel chatMessagesPanel;
    private javax.swing.JScrollPane chatMessagesScrollPane;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JPanel chatWindow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane messageScrollPane;
    private javax.swing.JPanel sidebarPanel;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JList userList;
    private javax.swing.JScrollPane userListScrollPane;
    private javax.swing.JPanel viewSwitcher;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        if (o.getClass() == ChatClient.class) {
            ChatResponse response = (ChatResponse) arg;

            switch (response.getCommand()) {
                case "USERLIST":
                    DefaultListModel model = new DefaultListModel();
                    String[] users = (String[]) response.getParameter("users");
                    for (int i = 0; i < users.length; i++) {
                        model.add(i, users[i]);
                    }

                    userList.setModel(model);
                    userList.revalidate();
                    userList.repaint();
                    break;
                case "MSG":
                    JPanel messageItem = new JPanel();
                    messageItem.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel lblUsername = new JLabel(((String) response.getParameter("sender")) + ":");
                    lblUsername.setFont(new java.awt.Font("Tahoma", 1, 13));
                    messageItem.add(lblUsername);

                    JLabel lblMessage = new JLabel((String) response.getParameter("message"));
                    messageItem.add(lblMessage);

                    chatMessagesItemsPanel.add(messageItem);
                    chatMessagesItemsPanel.revalidate();
                    chatMessagesItemsPanel.repaint();
                    break;
            }
        }
    }
}
